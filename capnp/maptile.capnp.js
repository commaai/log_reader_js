"use strict";
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */
const capnp = require("capnp-ts");
const capnp_ts_1 = require("capnp-ts");
exports._capnpFileId = "a086df597ef5d7a0";
class Point extends capnp_ts_1.Struct {
    getX() { return capnp_ts_1.Struct.getFloat64(0, this); }
    setX(value) { capnp_ts_1.Struct.setFloat64(0, value, this); }
    getY() { return capnp_ts_1.Struct.getFloat64(8, this); }
    setY(value) { capnp_ts_1.Struct.setFloat64(8, value, this); }
    getZ() { return capnp_ts_1.Struct.getFloat64(16, this); }
    setZ(value) { capnp_ts_1.Struct.setFloat64(16, value, this); }
    toString() { return "Point_" + super.toString(); }
}
Point._capnp = { displayName: "Point", id: "a521dede354829ed", size: new capnp_ts_1.ObjectSize(24, 0) };
exports.Point = Point;
class PolyLine extends capnp_ts_1.Struct {
    adoptPoints(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this)); }
    disownPoints() { return capnp_ts_1.Struct.disown(this.getPoints()); }
    getPoints() { return capnp_ts_1.Struct.getList(0, PolyLine._Points, this); }
    hasPoints() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    initPoints(length) { return capnp_ts_1.Struct.initList(0, PolyLine._Points, length, this); }
    setPoints(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this)); }
    toString() { return "PolyLine_" + super.toString(); }
}
PolyLine._capnp = { displayName: "PolyLine", id: "c2de746e147ac083", size: new capnp_ts_1.ObjectSize(0, 1) };
exports.PolyLine = PolyLine;
class Lane_LaneBoundary extends capnp_ts_1.Struct {
    adoptPolyLine(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this)); }
    disownPolyLine() { return capnp_ts_1.Struct.disown(this.getPolyLine()); }
    getPolyLine() { return capnp_ts_1.Struct.getStruct(0, PolyLine, this); }
    hasPolyLine() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    initPolyLine() { return capnp_ts_1.Struct.initStructAt(0, PolyLine, this); }
    setPolyLine(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this)); }
    getStartHeading() { return capnp_ts_1.Struct.getFloat32(0, this); }
    setStartHeading(value) { capnp_ts_1.Struct.setFloat32(0, value, this); }
    toString() { return "Lane_LaneBoundary_" + super.toString(); }
}
Lane_LaneBoundary._capnp = { displayName: "LaneBoundary", id: "db6652f89b03abbf", size: new capnp_ts_1.ObjectSize(8, 1) };
exports.Lane_LaneBoundary = Lane_LaneBoundary;
class Lane extends capnp_ts_1.Struct {
    getId() { return capnp_ts_1.Struct.getText(0, this); }
    setId(value) { capnp_ts_1.Struct.setText(0, value, this); }
    adoptLeftBoundary(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(1, this)); }
    disownLeftBoundary() { return capnp_ts_1.Struct.disown(this.getLeftBoundary()); }
    getLeftBoundary() { return capnp_ts_1.Struct.getStruct(1, Lane_LaneBoundary, this); }
    hasLeftBoundary() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(1, this)); }
    initLeftBoundary() { return capnp_ts_1.Struct.initStructAt(1, Lane_LaneBoundary, this); }
    setLeftBoundary(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(1, this)); }
    adoptRightBoundary(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(2, this)); }
    disownRightBoundary() { return capnp_ts_1.Struct.disown(this.getRightBoundary()); }
    getRightBoundary() { return capnp_ts_1.Struct.getStruct(2, Lane_LaneBoundary, this); }
    hasRightBoundary() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(2, this)); }
    initRightBoundary() { return capnp_ts_1.Struct.initStructAt(2, Lane_LaneBoundary, this); }
    setRightBoundary(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(2, this)); }
    getLeftAdjacentId() { return capnp_ts_1.Struct.getText(3, this); }
    setLeftAdjacentId(value) { capnp_ts_1.Struct.setText(3, value, this); }
    getRightAdjacentId() { return capnp_ts_1.Struct.getText(4, this); }
    setRightAdjacentId(value) { capnp_ts_1.Struct.setText(4, value, this); }
    adoptInboundIds(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(5, this)); }
    disownInboundIds() { return capnp_ts_1.Struct.disown(this.getInboundIds()); }
    getInboundIds() { return capnp_ts_1.Struct.getList(5, capnp.TextList, this); }
    hasInboundIds() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(5, this)); }
    initInboundIds(length) { return capnp_ts_1.Struct.initList(5, capnp.TextList, length, this); }
    setInboundIds(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(5, this)); }
    adoptOutboundIds(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(6, this)); }
    disownOutboundIds() { return capnp_ts_1.Struct.disown(this.getOutboundIds()); }
    getOutboundIds() { return capnp_ts_1.Struct.getList(6, capnp.TextList, this); }
    hasOutboundIds() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(6, this)); }
    initOutboundIds(length) { return capnp_ts_1.Struct.initList(6, capnp.TextList, length, this); }
    setOutboundIds(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(6, this)); }
    toString() { return "Lane_" + super.toString(); }
}
Lane.LaneBoundary = Lane_LaneBoundary;
Lane._capnp = { displayName: "Lane", id: "a73a355efef16d5d", size: new capnp_ts_1.ObjectSize(0, 7) };
exports.Lane = Lane;
class TileSummary extends capnp_ts_1.Struct {
    getVersion() { return capnp_ts_1.Struct.getText(0, this); }
    setVersion(value) { capnp_ts_1.Struct.setText(0, value, this); }
    getUpdatedAt() { return capnp_ts_1.Struct.getUint64(0, this); }
    setUpdatedAt(value) { capnp_ts_1.Struct.setUint64(0, value, this); }
    getLevel() { return capnp_ts_1.Struct.getUint8(8, this); }
    setLevel(value) { capnp_ts_1.Struct.setUint8(8, value, this); }
    getX() { return capnp_ts_1.Struct.getUint16(10, this); }
    setX(value) { capnp_ts_1.Struct.setUint16(10, value, this); }
    getY() { return capnp_ts_1.Struct.getUint16(12, this); }
    setY(value) { capnp_ts_1.Struct.setUint16(12, value, this); }
    toString() { return "TileSummary_" + super.toString(); }
}
TileSummary._capnp = { displayName: "TileSummary", id: "89bfe583cb912e78", size: new capnp_ts_1.ObjectSize(16, 1) };
exports.TileSummary = TileSummary;
class MapTile extends capnp_ts_1.Struct {
    adoptSummary(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(0, this)); }
    disownSummary() { return capnp_ts_1.Struct.disown(this.getSummary()); }
    getSummary() { return capnp_ts_1.Struct.getStruct(0, TileSummary, this); }
    hasSummary() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(0, this)); }
    initSummary() { return capnp_ts_1.Struct.initStructAt(0, TileSummary, this); }
    setSummary(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(0, this)); }
    adoptLanes(value) { capnp_ts_1.Struct.adopt(value, capnp_ts_1.Struct.getPointer(1, this)); }
    disownLanes() { return capnp_ts_1.Struct.disown(this.getLanes()); }
    getLanes() { return capnp_ts_1.Struct.getList(1, MapTile._Lanes, this); }
    hasLanes() { return !capnp_ts_1.Struct.isNull(capnp_ts_1.Struct.getPointer(1, this)); }
    initLanes(length) { return capnp_ts_1.Struct.initList(1, MapTile._Lanes, length, this); }
    setLanes(value) { capnp_ts_1.Struct.copyFrom(value, capnp_ts_1.Struct.getPointer(1, this)); }
    toString() { return "MapTile_" + super.toString(); }
}
MapTile._capnp = { displayName: "MapTile", id: "a22d518a2b2f584b", size: new capnp_ts_1.ObjectSize(0, 2) };
exports.MapTile = MapTile;
PolyLine._Points = capnp.CompositeList(Point);
MapTile._Lanes = capnp.CompositeList(Lane);
